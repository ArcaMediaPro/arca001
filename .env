# .env

# Cadena de conexión a tu base de datos MongoDB
# La que me mostraste (mongodb://localhost:27017/catalogadorDB) parece correcta
# SI estás corriendo MongoDB localmente en el puerto 27017
# y el nombre de tu base de datos es 'catalogadorDB'.
# Si usas MongoDB Atlas u otro proveedor, usa la cadena que ellos te den.
MONGO_URI="mongodb+srv://nardullijavier:SBx0fBiZFv5TOiNO@cluster0.amxjypn.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"


# Puerto en el que correrá el servidor
# Puedes poner el puerto aquí o dejar que Express use el por defecto (5000 en tu server.js)
PORT=5000

# Clave secreta para firmar y verificar tokens JWT (JSON Web Tokens)
# ESTO ES CRUCIAL PARA LA SEGURIDAD DE LA AUTENTICACIÓN.
# ¡¡DEBES REEMPLAZAR la siguiente cadena por una string LARGA, ALEATORIA y ÚNICA para tu proyecto!!
# NO USES la cadena "ESTA_CADENA_DEBERIA_SER_LARGA_ALEATORIA_Y_SEGURA" en tu archivo real.
# Puedes generar una usando el comando de Node.js:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=cfc5930c59638da5e5f01d5e93fa7fea61bdbac9da27b32e9d6b0471da0a71e7

# --- Configuración para el Envío de Correos Electrónicos (Nodemailer) ---
# Reemplaza estos valores con los de tu proveedor de email (ej. SendGrid, Mailgun, Mailtrap, Gmail para desarrollo)

# Host del servidor SMTP de tu proveedor de email
EMAIL_HOST=smtp.example.com

# Puerto del servidor SMTP (comunes: 587 para TLS, 465 para SSL, 2525 para Mailtrap)
EMAIL_PORT=587

# Tu nombre de usuario para autenticarte en el servidor SMTP
EMAIL_USERNAME=tu_usuario_smtp

# Tu contraseña (o API key) para autenticarte en el servidor SMTP
EMAIL_PASSWORD=tu_contraseña_smtp

# Nombre del remitente que aparecerá en los correos (opcional, pero recomendado)
EMAIL_FROM_NAME="Catalogador de Videojuegos"

# Dirección de correo electrónico del remitente que aparecerá en los correos
EMAIL_FROM_ADDRESS=noreply@tuaplicacion.com

# Opcional: Para desarrollo con Gmail y 2FA, podrías necesitar una "App Password".
# Opcional: Si usas un puerto como 465, EMAIL_SECURE podría ser 'true', de lo contrario 'false'.
# Nodemailer suele inferir 'secure' del puerto, pero puedes definirlo explícitamente si es necesario.
# EMAIL_SECURE=true

CLOUDINARY_CLOUD_NAME= dgoeadnsh
CLOUDINARY_API_KEY= 274191642724891
CLOUDINARY_API_SECRET= h6VUAJZkUTWl1_SXi61OYcRLj4M

RAWG_API_KEY=f83533cf576947e6af8c959d9c6dd2ed

